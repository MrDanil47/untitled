package gora1;
import java.util.Scanner;

class Gora { //клас гора, з об'єктів якого буде складатись масив
String naz, mis; //Назва гори, місце
int hig; //Висота
}

public class  GoraList{ //основний клас
    public static void main(String[] args) { //точка входу в додаток
        Scanner sc = new Scanner(System.in, "UTF-8"); //оголошення нового сканеру
        System.out.println("Введіть кількість гір => ");
        int kol = sc.nextInt(); //задання кількості елементів масиву через клавіатуру, тільки цілі числа

        Gora[] gor = new Gora[kol]; //створення масиву розміром, який задав користувач

        System.out.println("Введіть інформацію про кожну гору:");

        for (int i = 0; i < gor.length; i++){ //лічильник, який проходить по масиву і вносить зміни до елементів

            sc.nextLine(); //очищення буферу для коректної роботи сканеру
            gor[i] = new Gora(); //створення об'єкту класса Gora
            System.out.print("Введіть назву " + (i + 1) + " гори => "); //і+1 через те, що лічильник в масиві починає з 0 і і+1 дозволяє коректно відібражати порядок
            gor[i].naz=sc.nextLine(); //встановлення прізвища з клавіатури
            System.out.print("Введіть місце розташування " + (i + 1) + " =>");
            gor[i].mis = sc.nextLine(); //встановлення місця з клавіатури

            System.out.print("Введіть її висоту => ");
            gor[i].hig = sc.nextInt(); //висоти з клавіатури
            sc.nextLine();
            System.out.println("\nГори:\n Назва\tМісце розташування \tВисота");

        }

        for (Gora g : gor){ //альтернативний запис виведення масиву людей
            System.out.print(g.naz + "\t" + g.mis + "\t" + g.hig + "\n");
        }

        //Частина коду, яка виводить найвищу вершину
        System.out.println("В цій частині ми визначимо найвищу вершину");
        sc.nextLine(); //очищення буферу для коректної роботи сканеру
        int maxn = 0; //змінна, яка буде зберігати в собі індекс максимального елементу масиву
        int max = gor[maxn].hig; //змінна, яка буде зберігати значення максимального елементу масиву
        for(int i = 0; i < gor.length; i++) //перебір всіх елементів масиву
            if (gor[i].hig > max){ //умова ЯКЩО розмір і елемента масиву більше за max
                max = gor[i].hig; //то і елемент стає max
                maxn = i; //і індекс максимального елементу maxnum приймає значення і
            }
        System.out.println("Найбільша гора: \n\n");
        System.out.println(gor[maxn].naz + " " + gor[maxn].mis + " " + gor[maxn].hig + "\n\n"); //виведення елементу з найбільшим розміром гори

        //Частина коду, яка визначає вершини із висотою понад 1000 м
        System.out.println("В цій частині йде визначення вершини із висотою понад 1000 м");
        sc.nextLine(); //очищення буферу для коректної роботи сканеру

        int count = gor.length; // рахунок арефметичного
        for (int i = 0; i < gor.length; i++){ //перебір масиву
            if(gor[i].hig >= 1000){ //якщо гора вища або = 1000 м
                count = i; //отримаємо висоту гори
            }
        }
        System.out.println("Вершини із висотою понад 1000 м: " + (gor[count].naz) +  " \n\n");

        //Сортування за розміром гір
        System.out.println("В цій частині ми сортуємо масив за розміром гір в порядку зростання");
        sc.nextLine(); //очищення буферу для коректної роботи сканеру

        for (int i = 0; i < gor.length - 1; i++){ //зовнішній лічильник масиву
            for(int j = 0; j < gor.length - 1 - i; j++) { //внутрішній лічильник масиву, проходить з кожним виконанням зовнішнього лічильнику на один елемент менше
                if(gor[j].hig > gor[j + 1].hig){ //якщо розмір гори j елементу масиву більше за наступний,
                    Gora ger = gor[j]; //створюємо об'єкт, який буде зберігати в собі минуле значення
                    gor[j] = gor[j + 1]; //замінюємо старе значення на значення наступного елементу
                    gor[j + 1] = ger; //присвоюємо наступному елементу значення минулого
                }
            }
        }
        System.out.println("\n Відсортований список за розмірами гір: ");
        for (int i = 0; i < gor.length; i++){ //виведення відсортованого масиву
            System.out.println(gor[i].naz + " " + gor[i].mis + " " + gor[i].hig + " \n ");
        }

        //Частина коду яка виконує пошук
        System.out.println("Пошук по масиву");
        sc.nextLine(); //очищення буферу для коректної роботи сканеру

        System.out.println("Введіть шукану назву: ");
        String name = sc.nextLine(); //вводимо шукану назву
        int num = -1; //змінна яка зазначає, що "шуканої гори не знайдено"
        for(int i = 0; i < gor.length; i++){ //лічильник
            if (name.equalsIgnoreCase(gor[i].naz))
                num = i; //якщо введена нами назва знайдена - присвоюємо індекс цього елементу масиву до змінної
        }
        if (num != -1){
            System.out.println("Така гора є:" + gor[num].naz + " " + gor[num].mis + " " + gor[num].hig); //виведення знайденого результату
        }
        else System.out.println("Такої гори не знайдено"); //якщо не знайшли

        //Редагування запису і виведення
        System.out.println("Редагування записів");
        sc.nextLine(); //очищення буферу для коректної роботи сканеру

        for (int i = 0; i < gor.length; i++){
            System.out.println((i + 1) + "." + " Назва: " + gor[i].naz + " " + " Розташування: " + gor[i].mis
                    + " Висота: " + gor[i].hig);
        }
        System.out.println("Введіть номер який запис хочете редагувати: ");
        int red = sc.nextInt() - 1; //вводимо номер елементу для редагування. -1 тут потрібен для правильної роботи частини коду, тому що елементи рахуються від 0.
        for (int i = 0; i < gor.length; i++){ //якщо шуканий елемент існує - виводимо його для користувача.
            if (i == red){
                System.out.println((red + 1) + "." + " Назва: " + gor[i].naz + " " + " Розташування: " + gor[i].mis
                        + " Висота: " + gor[i].hig);
            } else {
                System.out.println("Не вірно введено індекст або його не існує");
            }
        }
        sc.nextLine(); //очищення буферу
        System.out.println("Введіть номер що редагувати: \t 1. Назва \t 2. Місце розташування \t 3. Висота");
        int reds = sc.nextInt(); //введення номеру змінюваного запису
        switch (reds){ //коротко: якщо обираємо 1, тобто прізвище, то даємо користувачу змінити прізвище запису з клавіатури, і так далі з усіма номерами
            case 1:
                sc.nextLine();
                System.out.println("На що змінюємо: ");
                gor[red].naz = sc.nextLine();
                break;
            case 2:
                sc.nextLine();
                System.out.println("На що змінюємо: ");
                gor[red].mis = sc.nextLine();
                break;
            case 3:
                sc.nextLine();
                System.out.println("На що змінюємо: ");
                gor[red].hig = sc.nextInt();
                break;
        }

        System.out.println("Змінена інформація про гору: "); //виведення відредагованного запису
        System.out.println("Назва: " + gor[red].naz + " " + "Місце розташування: " + gor[red].mis + " "
                + "Висота: " + gor[red].hig);
    }
}
